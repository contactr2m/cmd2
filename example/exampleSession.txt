This is cut-and-pasted from an interactive example.py session.
Calling `example.py -t` runs it as a series of unit tests,
verifying that the same output is still returned.

(Cmd) help

Documented commands (type help <topic>):
========================================
_load  edit  history  li    load   r    save  set    shortcuts  speak
ed     hi    l        list  orate  run  say   shell  show     

Undocumented commands:
======================
EOF  cmdenvironment  eof  exit  help  q  quit

(Cmd) help say
Repeats what you tell me to.
Usage: speak [options] arg

Options:
  -h, --help            show this help message and exit
  -p, --piglatin        atinLay
  -s, --shout           N00B EMULATION MODE
  -r REPEAT, --repeat=REPEAT
                        output [n] times

(Cmd) say goodnight, Gracie
goodnight, Gracie
(Cmd) say -ps --repeat=5 goodnight, gracie
OODNIGHT, GRACIEGAY
OODNIGHT, GRACIEGAY
OODNIGHT, GRACIEGAY
(Cmd) set
prompt: (Cmd) 
editor: gedit
echo: False
maxrepeats: 3
(Cmd) set maxrepeats 5
maxrepeats - was: 3
now: 5
(Cmd) say -ps --repeat=5 goodnight, gracie
OODNIGHT, GRACIEGAY
OODNIGHT, GRACIEGAY
OODNIGHT, GRACIEGAY
OODNIGHT, GRACIEGAY
OODNIGHT, GRACIEGAY
(Cmd) orate these are the
> times that
> try mens' souls
> 
> 
these are the times that try mens' souls
(Cmd) & we made a shortcut!
we made a shortcut!
(Cmd) history
-------------------------[1]
help
-------------------------[2]
help say
-------------------------[3]
say goodnight, Gracie
-------------------------[4]
say -ps --repeat=5 goodnight, gracie
-------------------------[5]
set
-------------------------[6]
set maxrepeats 5
-------------------------[7]
say -ps --repeat=5 goodnight, gracie
-------------------------[8]
orate these are the
times that
try mens' souls


-------------------------[9]
& we made a shortcut!
(Cmd) run 3
say goodnight, Gracie
goodnight, Gracie
(Cmd) say put this in a file > text.txt
(Cmd) say < text.txt
put this in a file
(Cmd) set prompt "---> "
prompt - was: (Cmd) 
now: ---> 
---> say goodbye
goodbye
---> 
